@*@model Golf_6.Models.Tidsbokning*@
@using Golf_6.Models
@*@model Golf_6.ViewModels.SearchViewModel*@
@*@model System.Data.DataTable*@
@using System.Data;
@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@{
    ViewBag.Title = "Index";
}

@Styles.Render("~/Content/DataTables/css/jquery.dataTables.css")
@Styles.Render("~/Content/DataTables/css/dataTables.bootstrap.min.css")
@Styles.Render("~/Content/DataTables/css/responsive.bootstrap.min.css")

@*Ev kommande funktion behöver dessa*@
@Styles.Render("~/Content/DataTables/css/responsive.dataTables.min.css")
@Styles.Render("~/Content/DataTables/css/buttons.dataTables.min.css")

<h2>Index</h2>

@*<div width="90%">*@
<table id="hamtaMedlemmar" class="display" cellspacing="0" width=" 100%">

    <thead>
        <tr>
            @foreach (DataColumn x in Model.Columns)
            {
                <th>@x.ColumnName</th>
            }

        </tr>
    </thead>
    <tbody>
        @foreach (DataRow row in Model.Rows)
        {
            <tr>
                @foreach (DataColumn x in Model.Columns)
                {
                    <td>@row[x.ColumnName]</td>
                }
            </tr>
        }
    </tbody>
</table>

@*</div>*@


@*@using (Html.BeginForm("Search", "Tidsbokning", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Sök</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="form-group">
                @Html.LabelFor(model => model.Search.SokFornamn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Search.SokFornamn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Search.SokFornamn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Search.SokEfternamn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Search.SokEfternamn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Search.SokEfternamn, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Sök" class="btn btn-default" />
                </div>
            </div>
        </div>*@

@*<div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <ul>
                @foreach (string w in ViewBag.Lista)
                {
                    <li>@w</li>
                }
            </ul>
        </div>
    </div>*@

@*}*@
@*<div id="divSök"></div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Tidsbokning</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Search.Datum, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Search.Datum, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Search.Datum, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Search.Tid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Search.Tid, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Search.Tid, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Search.Spelare2ID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Search.Spelare2ID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Search.Spelare2ID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Search.Spelare3ID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Search.Spelare3ID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Search.Spelare3ID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Search.Spelare4ID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Search.Spelare4ID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Search.Spelare4ID, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }*@

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @*@Scripts.Render("~/bundles/jquery")*@
    @Scripts.Render("~/bundles/jqueryval")

    @Scripts.Render("~/Scripts/DataTables/jquery.dataTables.min.js")
    @Scripts.Render("~/Scripts/DataTables/dataTables.bootstrap.min.js")
    @Scripts.Render("~/Scripts/DataTables/dataTables.responsive.min.js")
    @Scripts.Render("~/Scripts/DataTables/responsive.bootstrap.min.js")

    @*Testar ny funktion*@
    @Scripts.Render("~/Scripts/DataTables/dataTables.buttons.min.js")
    @Scripts.Render("~/Scripts/DataTables/buttons.colVis.min.js")
}


