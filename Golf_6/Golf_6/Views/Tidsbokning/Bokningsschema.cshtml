@model Golf_6.Models.Tidsbokning
@using Golf_6.Controllers;
@using Golf_6.Models;
@using System.Collections.Generic;
@using (Html.BeginForm("Bokningsschema", "Tidsbokning", FormMethod.Post))
{



    {
        Layout = "~/Views/Shared/_LayoutMedlem.cshtml";

    }
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.12.4.js"></script>
<script src="//code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<h2>Bokningsschema</h2>

<div class="center-block">


    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

   


    <input type="text" name="datepicker" class="btn btn-info btn-lg pull-left" id="datepicker" value="Välj datum" style="margin-bottom:25px">

    <script type="text/javascript">

        $(function () {
            $('#datepicker').datepicker();

        });
        var currentDate = $(".selector").datepicker("getDate");
        $.datepicker.regional['sv'] = {
            closeText: 'Stäng',
            prevText: '< Föregående',
            nextText: 'Nästa >',
            currentText: 'Idag',
            monthNames: ['Januari', 'Februari', 'Mars', 'April', 'Maj', 'Juni', 'Juli', 'Augusti', 'September', 'Oktober', 'November', 'December'],
            monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'Maj', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dec'],
            dayNamesShort: ['Sön', 'Mån', 'Tis', 'Ons', 'Tor', 'Fre', 'Lör'],
            dayNames: ['Söndag', 'Måndag', 'Tisdag', 'Onsdag', 'Torsdag', 'Fredag', 'Lördag'],
            dayNamesMin: ['Sö', 'Må', 'Ti', 'On', 'To', 'Fr', 'Lö'],
            weekHeader: 'Не',
            dateFormat: 'yy-mm-dd',
            firstDay: 1,
            isRTL: false,
            showMonthAfterYear: false,
            yearSuffix: '',
            onSelect: function (dateText, inst) {
                 $('form').submit();
            }
        };
        $.datepicker.setDefaults($.datepicker.regional['sv']);


        $(document).ready(function () {
            $('td').popover({
                html: true,
                animation: true,
                placement: "bottom",
                trigger: "hover",
                container: "body",
            });
        });
    </script>


    <table class="table table-striped table-responsive table-bordered" id="tableMedlemBokar">
        <tr>
            <td class="timme">07</td>
            <td class="timme">08</td>
            <td class="timme">09</td>
            <td class="timme">10</td>
            <td class="timme">11</td>
            <td class="timme">12</td>
            <td class="timme">13</td>
            <td class="timme">14</td>
            <td class="timme">15</td>
            <td class="timme">16</td>
            <td class="timme">17</td>
        </tr>
        @{ if (ViewBag.Stängd == true)
            {
<h3>Banan är stängd! Välj ett datum mellan @ViewBag.Start och @ViewBag.Slut för att boka tid.</h3>
            }
            else
            {
                <tr>
                    @{
                        DateTime datum = new DateTime();
                        TimeSpan intervall = new TimeSpan(07, 00, 00);
                        DateTime allt = datum.Date + intervall;
                        string kön = " ";
                        string hcp = " ";
                        string medlemsinfo = "";
                        DateTime start = new DateTime();
                        DateTime slut = new DateTime();
                        DateTime start2 = new DateTime();


                        foreach (Tidsbokning tb in ViewBag.Tävlingslista)
                        {
                            start = tb.StarttidTävling;
                            slut = tb.SluttidTävling;

                        }
                        start2 = start;

                        for (int i = 0; i <= 10; i++)
                        {
                            int räknare = 0;
                            string columnFärg = "columnGreen";

                            foreach (Tidsbokning tb in ViewBag.Tävlingslista)
                            {

                                string s = allt.ToShortTimeString();
                                DateTime allt2 = Convert.ToDateTime(s);
                                
                                if(allt2 >= start && allt2 < slut)
                                {
                                    columnFärg = "columnRed";
                                    räknare = -1;
                                    medlemsinfo = "Stängt";
                                
                                }
                                else
                                {
                                    foreach (Tidsbokning t in ViewBag.List)
                                    {
                                        if (t.Tid.ToString("HHmm") == allt.ToString("HHmm"))
                                        {
                                            räknare++;
                                            kön += t.MedlemKön + " ";
                                            hcp += t.MedlemHCP.ToString() + " ";
                                            medlemsinfo += "Kön: " + kön + "Hcp: " + hcp + "\n";
                                            kön = " ";
                                            hcp = " ";
                                        }
                                        if (räknare == 1)
                                        {
                                            columnFärg = "columnYellow";
                                        }
                                        if (räknare == 4)
                                        {
                                            columnFärg = "columnRed";
                                        }

                                    }
                                }
                            }


                            <td id=@allt.ToString("HHmm") class="column @columnFärg" data-toggle="popover" title="@allt.ToString("HHmm")" data-content="@medlemsinfo">
                                :00
                                @if (räknare != -1)
                                {

                                    if (räknare < 4)
                                    {
                                        <p>@räknare.ToString() /4</p>
                                        @Html.ActionLink("Boka", "create", "Tidsbokning", new { validate = Model.Datepicker + " " + allt.ToLongTimeString() }, null)
                                    }
                                }
                                else
                                {
                                    <p>Stängt</p>
                                }

                            </td>
                            medlemsinfo = "";
                            allt = allt.AddHours(1);
                        }
                    }
                </tr>

        <tr>
            @{
                allt = allt.AddHours(-11);
                allt = allt.AddMinutes(10);
                for (int i = 0; i <= 10; i++)
                {
                    int räknare = 0;
                    string columnFärg = "columnGreen";

                    foreach (Tidsbokning tb in ViewBag.Tävlingslista)
                    {
                        string s = allt.ToShortTimeString();
                        DateTime allt2 = Convert.ToDateTime(s);

                        if (allt2 >= start && allt2 < slut)
                        {
                            columnFärg = "columnRed";
                            räknare = -1;
                            medlemsinfo = "Stängt";
                        

                        }
                        else
                        {
                            foreach (Tidsbokning t in ViewBag.List)
                            {
                                if (t.Tid.ToString("HHmm") == allt.ToString("HHmm"))
                                {
                                    räknare++;
                                    kön += t.MedlemKön + " ";
                                    hcp += t.MedlemHCP.ToString() + " ";
                                    medlemsinfo += "Kön: " + kön + "Hcp: " + hcp + "\n";
                                    kön = " ";
                                    hcp = " ";
                                }
                                if (räknare == 1)
                                {
                                    columnFärg = "columnYellow";
                                }
                                if (räknare == 4)
                                {
                                    columnFärg = "columnRed";
                                }

                            }
                        }
                    }


                    <td id=@allt.ToString("HHmm") class="column @columnFärg" data-toggle="popover" title="@allt.ToString("HHmm")" data-content="@medlemsinfo">
                        :10
                        @if (räknare != -1)
                        {

                            if (räknare < 4)
                            {
                                <p>@räknare.ToString() /4</p>
                                        @Html.ActionLink("Boka", "create", "Tidsbokning", new { validate = Model.Datepicker + " " + allt.ToLongTimeString() }, null)
                            }
                        }
                        else
                        {
                            <p>Stängt</p>
                        }

                    </td>
                    medlemsinfo = "";
                    allt = allt.AddHours(1);
                }

            }
        </tr>
        <tr>
            @{
                allt = allt.AddHours(-11);
                allt = allt.AddMinutes(10);
                for (int i = 0; i <= 10; i++)
                {
                    int räknare = 0;
                    string columnFärg = "columnGreen";

                    foreach (Tidsbokning tb in ViewBag.Tävlingslista)
                    {
                        string s = allt.ToShortTimeString();
                        DateTime allt2 = Convert.ToDateTime(s);

                        if (allt2 >= start && allt2 < slut)
                        {
                            columnFärg = "columnRed";
                            räknare = -1;
                            medlemsinfo = "Stängt";
                   

                        }
                        else
                        {
                            foreach (Tidsbokning t in ViewBag.List)
                            {
                                if (t.Tid.ToString("HHmm") == allt.ToString("HHmm"))
                                {
                                    räknare++;
                                    kön += t.MedlemKön + " ";
                                    hcp += t.MedlemHCP.ToString() + " ";
                                    medlemsinfo += "Kön: " + kön + "Hcp: " + hcp + "\n";
                                    kön = " ";
                                    hcp = " ";
                                }
                                if (räknare == 1)
                                {
                                    columnFärg = "columnYellow";
                                }
                                if (räknare == 4)
                                {
                                    columnFärg = "columnRed";
                                }

                            }
                        }
                    }


                    <td id=@allt.ToString("HHmm") class="column @columnFärg" data-toggle="popover" title="@allt.ToString("HHmm")" data-content="@medlemsinfo">
                        :20
                        @if (räknare != -1)
                        {

                            if (räknare < 4)
                            {
                                <p>@räknare.ToString() /4</p>
                                        @Html.ActionLink("Boka", "create", "Tidsbokning", new { validate = Model.Datepicker + " " + allt.ToLongTimeString() }, null)
                            }
                        }
                        else
                        {
                            <p>Stängt</p>
                        }

                    </td>
                    medlemsinfo = "";
                    allt = allt.AddHours(1);
                }

            }
        </tr>
        <tr>
            @{
                allt = allt.AddHours(-11);
                allt = allt.AddMinutes(10);
                for (int i = 0; i <= 10; i++)
                {
                    int räknare = 0;
                    string columnFärg = "columnGreen";

                    foreach (Tidsbokning tb in ViewBag.Tävlingslista)
                    {
                        string s = allt.ToShortTimeString();
                        DateTime allt2 = Convert.ToDateTime(s);

                        if (allt2 >= start && allt2 < slut)
                        {
                            columnFärg = "columnRed";
                            räknare = -1;
                            medlemsinfo = "Stängt";
                          

                        }
                        else
                        {
                            foreach (Tidsbokning t in ViewBag.List)
                            {
                                if (t.Tid.ToString("HHmm") == allt.ToString("HHmm"))
                                {
                                    räknare++;
                                    kön += t.MedlemKön + " ";
                                    hcp += t.MedlemHCP.ToString() + " ";
                                    medlemsinfo += "Kön: " + kön + "Hcp: " + hcp + "\n";
                                    kön = " ";
                                    hcp = " ";
                                }
                                if (räknare == 1)
                                {
                                    columnFärg = "columnYellow";
                                }
                                if (räknare == 4)
                                {
                                    columnFärg = "columnRed";
                                }

                            }
                        }
                    }


                    <td id=@allt.ToString("HHmm") class="column @columnFärg" data-toggle="popover" title="@allt.ToString("HHmm")" data-content="@medlemsinfo">
                        :30
                        @if (räknare != -1)
                        {

                            if (räknare < 4)
                            {
                                <p>@räknare.ToString() /4</p>
                                        @Html.ActionLink("Boka", "create", "Tidsbokning", new { validate = Model.Datepicker + " " + allt.ToLongTimeString() }, null)
                            }
                        }
                        else
                        {
                            <p>Stängt</p>
                        }

                    </td>
                    medlemsinfo = "";
                    allt = allt.AddHours(1);
                }

            }
        </tr>
        <tr>
            @{
                allt = allt.AddHours(-11);
                allt = allt.AddMinutes(10);
                for (int i = 0; i <= 10; i++)
                {
                    int räknare = 0;
                    string columnFärg = "columnGreen";

                    foreach (Tidsbokning tb in ViewBag.Tävlingslista)
                    {
                        string s = allt.ToShortTimeString();
                        DateTime allt2 = Convert.ToDateTime(s);

                        if (allt2 >= start && allt2 < slut)
                        {
                            columnFärg = "columnRed";
                            räknare = -1;
                            medlemsinfo = "Stängt";
                           

                        }
                        else
                        {
                            foreach (Tidsbokning t in ViewBag.List)
                            {
                                if (t.Tid.ToString("HHmm") == allt.ToString("HHmm"))
                                {
                                    räknare++;
                                    kön += t.MedlemKön + " ";
                                    hcp += t.MedlemHCP.ToString() + " ";
                                    medlemsinfo += "Kön: " + kön + "Hcp: " + hcp + "\n";
                                    kön = " ";
                                    hcp = " ";
                                }
                                if (räknare == 1)
                                {
                                    columnFärg = "columnYellow";
                                }
                                if (räknare == 4)
                                {
                                    columnFärg = "columnRed";
                                }

                            }
                        }
                    }


                    <td id=@allt.ToString("HHmm") class="column @columnFärg" data-toggle="popover" title="@allt.ToString("HHmm")" data-content="@medlemsinfo">
                        :40
                        @if (räknare != -1)
                        {

                            if (räknare < 4)
                            {
                                <p>@räknare.ToString() /4</p>
                                        @Html.ActionLink("Boka", "create", "Tidsbokning", new { validate = Model.Datepicker + " " + allt.ToLongTimeString() }, null)
                            }
                        }
                        else
                        {
                            <p>Stängt</p>
                        }

                    </td>
                    medlemsinfo = "";
                    allt = allt.AddHours(1);
                }

            }
        </tr>
        <tr>
            @{
                allt = allt.AddHours(-11);
                allt = allt.AddMinutes(10);
                for (int i = 0; i <= 10; i++)
                {
                    int räknare = 0;
                    string columnFärg = "columnGreen";

                    foreach (Tidsbokning tb in ViewBag.Tävlingslista)
                    {
                        string s = allt.ToShortTimeString();
                        DateTime allt2 = Convert.ToDateTime(s);

                        if (allt2 >= start && allt2 < slut)
                        {
                            columnFärg = "columnRed";
                            räknare = -1;
                            medlemsinfo = "Stängt";
                        

                        }
                        else
                        {
                            foreach (Tidsbokning t in ViewBag.List)
                            {
                                if (t.Tid.ToString("HHmm") == allt.ToString("HHmm"))
                                {
                                    räknare++;
                                    kön += t.MedlemKön + " ";
                                    hcp += t.MedlemHCP.ToString() + " ";
                                    medlemsinfo += "Kön: " + kön + "Hcp: " + hcp + "\n";
                                    kön = " ";
                                    hcp = " ";
                                }
                                if (räknare == 1)
                                {
                                    columnFärg = "columnYellow";
                                }
                                if (räknare == 4)
                                {
                                    columnFärg = "columnRed";
                                }

                            }
                        }
                    }


                    <td id=@allt.ToString("HHmm") class="column @columnFärg" data-toggle="popover" title="@allt.ToString("HHmm")" data-content="@medlemsinfo">
                        :50
                        @if (räknare != -1)
                        {

                            if (räknare < 4)
                            {
                                <p>@räknare.ToString() /4</p>
                                        @Html.ActionLink("Boka", "create", "Tidsbokning", new { validate = Model.Datepicker + " " + allt.ToLongTimeString() }, null)
                            }
                        }
                        else
                        {
                            <p>Stängt</p>
                        }

                    </td>
                    medlemsinfo = "";
                    allt = allt.AddHours(1);
                }

            }
        </tr>
                    }
                }
    </table>




        <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#bokningsModal">Boka</button>
        <div id="bokningsModal" class="modal fade" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Valt datum och tid</h4>
                    </div>
                    <div class="modal-body">
                        <p><strong>Vänligen välj medspelare</strong></p>
                        <div class="col-lg-6">
                            <form>
                                <div class="input-group">
                                    <input type="text" class="form-control" placeholder="Sök">
                                    <div class="input-group-btn">
                                        <button class="btn btn-default" type="submit">
                                            <i class="glyphicon glyphicon-search"></i>
                                        </button>
                                    </div>
                                </div>

                            </form>
                            <div class="input-group" style="margin-top:20px">

                                <input type="text" class="form-control" placeholder="Förnamn & Efternamn" style="margin-bottom:5px">
                                <button type="button" class="btn btn-primary">Lägg till</button>
                            </div>
                        </div>

                        <div class="col-lg-6">
                            <ul class="list-group">
                                <li class="list-group-item">Namnet på inloggad person</li>
                                <li class="list-group-item">Maria Andersson</li>
                                <li class="list-group-item">?</li>
                                <li class="list-group-item">?</li>
                            </ul>
                        </div>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-lg" data-dismiss="modal">Avbryt</button>
                        <button type="button" class="btn btn-lg btn-info" data-dismiss="modal">Boka</button>
                    </div>
                </div>

            </div>
        </div>

</div>
}












                                      @*OBS! GAMMAL KOD NEDANFÖR DENNA TEXT OBS!*@


@*<table>
        //Test för att läsa in bokade tider för ett datum, kön och hcp för samtliga deltagare på varje tid hämtas också
        <thead>
            <tr>
                @foreach (DataColumn x in Model.Columns)
                {
                    <th>@x.ColumnName</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (DataRow row in Model.Rows)
            {
                <tr>
                    @foreach (DataColumn x in Model.Columns)
                    {
                        <td>@row[x.ColumnName]</td>
                    }
                </tr>
            }
        </tbody>
    </table>



    <table class="table table-striped table-responsive table-bordered" id="tableMedlemBokar">
        <thead>
            <tr>
                <th contenteditable="false">Tid</th>
                <th>HCP</th>
                <th>Kön</th>
                <th>Boka</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <th scope="row">07.00</th>
                <td>HCP</td>
                <td></td>
                <td style="text-align:center;"> <input id="boka" type="checkbox" value="1"></td>
            </tr>
            <tr>
                <th scope="row">07.10</th>
                <td></td>
                <td></td>
                <td></td>

            </tr>
            <tr>
                <th scope="row">07.20</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">07.30</th>
                <td></td>
                <td></td>
                <td></td>

            </tr>
            <tr>
                <th scope="row">07.40</th>
                <td></td>
                <td></td>
                <td></td>

            </tr>
            <tr>
                <th scope="row">07.50</th>
                <td></td>
                <td></td>
                <td></td>

            </tr>
            <tr>
                <th scope="row">08.00</th>
                <td></td>
                <td></td>
                <td></td>

            </tr>
            <tr>
                <th scope="row">08.10</th>
                <td></td>
                <td></td>
                <td></td>

            </tr>
            <tr>
                <th scope="row">08.20</th>
                <td></td>
                <td></td>
                <td></td>

            </tr>
            <tr>
                <th scope="row">08.30</th>
                <td></td>
                <td></td>
                <td></td>

            </tr>
            <tr>
                <th scope="row">08.40</th>
                <td></td>
                <td></td>
                <td></td>

            </tr>
            <tr>
                <th scope="row">08.50</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">09.00</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">09.10</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">09.20</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">09.30</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">09.40</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">09.50</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">10.00</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">10.10</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">10.20</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">10.30</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">10.40</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">10.50</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">11.00</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">11.10</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">11.20</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">11.30</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">11.40</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">11.50</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">12.00</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">12.10</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">12.20</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">12.30</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">12.40</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">12.50</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">13.00</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">13.10</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">13.20</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">13.30</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">13.40</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">13.50</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">14.00</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">14.10</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">14.20</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">14.30</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">14.40</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">14.50</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">15.00</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">15.10</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">15.20</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">15.30</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">15.40</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">15.50</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">16.00</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">16.10</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">16.20</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">16.30</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">16.40</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">16.50</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">17.00</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">17.10</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">17.20</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">17.30</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">17.40</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th scope="row">17.50</th>
                <td></td>
                <td></td>
                <td></td>
            </tr>

        </tbody>

    </table>*@